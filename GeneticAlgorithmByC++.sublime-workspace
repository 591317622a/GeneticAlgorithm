{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"GA",
				"GA_TSP"
			],
			[
				"cop",
				"copyTo\tvoid copyTo(OutputArray m) const"
			],
			[
				"co",
				"copyTo\tvoid copyTo(OutputArray m) const"
			],
			[
				"Ex",
				"exp\tvoid exp(InputArray src, OutputArray dst)"
			],
			[
				"Sca",
				"Scalar\tScalar"
			],
			[
				"inp",
				"in_imp"
			],
			[
				"im",
				"implication_num"
			],
			[
				"par",
				"para_num"
			],
			[
				"b",
				"BPsolve\tvoid BPsolve(cv::Mat &_input, cv::Mat &_output)"
			],
			[
				"imp",
				"imp_out_b\tcv::Mat imp_out_b"
			],
			[
				"in_im",
				"in_imp_b\tcv::Mat in_imp_b"
			],
			[
				"row",
				"rowRange\tcv::Mat rowRange(int startrow, int endrow) const"
			],
			[
				"in",
				"in_imp"
			],
			[
				"in_",
				"in_imp_b\tcv::Mat in_imp_b"
			],
			[
				"col",
				"cols\tint cols"
			],
			[
				"ro",
				"rowRange\tcv::Mat rowRange(int startrow, int endrow) const"
			],
			[
				"sl",
				"solve\tvoid solve(float (*_fun)(...))"
			],
			[
				"pa",
				"para_num"
			],
			[
				"dem",
				"demo4\tvoid demo4(std::function<float (...)> fun)"
			],
			[
				"va",
				"va_end\tva_end(ap)"
			],
			[
				"va_",
				"va_start\tva_start(ap, param)"
			],
			[
				"obj",
				"objV2\tstd::vector<float> & objV2"
			],
			[
				"ob",
				"objV2"
			],
			[
				"cv",
				"CV_32FC1"
			],
			[
				"tem",
				"tem1"
			],
			[
				"bes",
				"best2"
			],
			[
				"de",
				"demo1_2.png\tw:800 h:400"
			],
			[
				"reco",
				"recode_rank_index\tstd::vector<std::pair<int, float> > recode_rank_index"
			],
			[
				"max",
				"max_index\tint max_index"
			],
			[
				"ost",
				"osty"
			],
			[
				"ch",
				"chrom_num"
			],
			[
				"best",
				"best\tstd::pair<float, float> best"
			],
			[
				"_p",
				"_para_num"
			],
			[
				"Poi",
				"Point2f\tPoint2f"
			],
			[
				"se",
				"setValue\tcvplot::Series & setValue(const std::vector<Point2> &values)"
			],
			[
				"setVa",
				"setValue\tcvplot::Series & setValue(const std::vector<Point2> &values)"
			],
			[
				"serc",
				"search_max"
			],
			[
				"ser",
				"search_min"
			],
			[
				"p_",
				"p_mut"
			],
			[
				"gr",
				"Green\tconst cvplot::Color Green"
			],
			[
				"c",
				"color\tcvplot::Color color() const"
			],
			[
				"resi",
				"resizeWindow\tvoid resizeWindow(const std::string &view, int width, int height)"
			],
			[
				"ab",
				"abs\tfloat abs(float __x)"
			],
			[
				"Size",
				"Size\tSize"
			],
			[
				"setW",
				"setWindowTitle\tvoid setWindowTitle(const std::string &view, const std::string &title)"
			],
			[
				"pop",
				"Population\tcv::Mat Population"
			],
			[
				"Po",
				"Popula"
			],
			[
				"for",
				"for_each\t_Function for_each(_InputIterator __first, _InputIterator __last, _Function __f)"
			],
			[
				"randu",
				"randu\tvoid randu(InputOutputArray dst, InputArray low, InputArray high)"
			],
			[
				"m",
				"main\tmain()"
			],
			[
				"da",
				"data_decode"
			],
			[
				"com",
				"command_buffer\tuchar * command_buffer"
			],
			[
				"new",
				"new_fd"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/main.cpp",
			"settings":
			{
				"buffer_size": 308,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/demo.cpp",
			"settings":
			{
				"buffer_size": 4220,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "includes/demo.h",
			"settings":
			{
				"buffer_size": 110,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "includes/GA.h",
			"settings":
			{
				"buffer_size": 1705,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/GAlib/GA_TSP.cpp",
			"settings":
			{
				"buffer_size": 1195,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/GAlib/GA_BP.cpp",
			"settings":
			{
				"buffer_size": 1983,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/GAlib/GA.cpp",
			"settings":
			{
				"buffer_size": 4272,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "GeneticAlgorithmByC++ (Linux)",
	"build_system_choices":
	[
		[
			[
				[
					"GeneticAlgorithmByC++ (Linux)",
					""
				],
				[
					"GeneticAlgorithmByC++ (Linux)",
					"clean"
				],
				[
					"GeneticAlgorithmByC++ (Linux)",
					"rebuild_cache"
				],
				[
					"GeneticAlgorithmByC++ (Linux)",
					"GA"
				],
				[
					"GeneticAlgorithmByC++ (Linux)",
					"cvplotlib"
				]
			],
			[
				"GeneticAlgorithmByC++ (Linux)",
				""
			]
		],
		[
			[
				[
					"GeneticAlgorithmByC++ (Linux)",
					""
				],
				[
					"GeneticAlgorithmByC++ (Linux)",
					"clean"
				],
				[
					"GeneticAlgorithmByC++ (Linux)",
					"rebuild_cache"
				],
				[
					"GeneticAlgorithmByC++ (Linux)",
					"GA"
				],
				[
					"GeneticAlgorithmByC++ (Linux)",
					"cvplotlib"
				],
				[
					"GeneticAlgorithmByC++ (Linux)",
					"GAlib"
				]
			],
			[
				"GeneticAlgorithmByC++ (Linux)",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 202.0,
		"last_filter": "git push",
		"selected_items":
		[
			[
				"git push",
				"Git: Push"
			],
			[
				"git com",
				"Git: Commit"
			],
			[
				"git ad",
				"Git: Add All"
			],
			[
				"git pus",
				"Git: Push"
			],
			[
				"git add",
				"Git: Add All"
			],
			[
				"git a",
				"Git: Add All"
			],
			[
				"git  push",
				"Git: Push"
			],
			[
				"git  com",
				"Git: Commit"
			],
			[
				"git  ad",
				"Git: Add Current File"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"git  pus",
				"Git: Push"
			],
			[
				"git  add",
				"Git: Add All"
			],
			[
				"gita",
				"Git: Add All"
			],
			[
				"git co",
				"Git: Commit"
			],
			[
				"clang",
				"EasyClangComplete: Settings"
			]
		],
		"width": 588.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/shisanchuan/C++work/GeneticAlgorithm",
		"/home/shisanchuan/C++work/GeneticAlgorithm/src"
	],
	"file_history":
	[
		"/home/shisanchuan/C++work/GeneticAlgorithm/README.md",
		"/home/shisanchuan/C++work/GeneticAlgorithm/src/GAlib/GA.cpp",
		"/usr/include/c++/5/bits/stl_algo.h",
		"/home/shisanchuan/C++work/GeneticAlgorithm/src/cvplotlib/figure.cc",
		"/home/shisanchuan/C++work/GeneticAlgorithm/includes/internal.h",
		"/home/shisanchuan/C++work/GeneticAlgorithm/src/GAlib/GA.h",
		"/home/shisanchuan/C++work/GeneticAlgorithm/src/CMakeLists.txt",
		"/home/shisanchuan/C++work/GeneticAlgorithm/src/GAlib/CMakeLists.txt",
		"/home/shisanchuan/C++work/GeneticAlgorithm/includes/figure.h",
		"/home/shisanchuan/C++work/GeneticAlgorithm/includes/window.h",
		"/home/shisanchuan/.config/sublime-text-3/Packages/SublimeGDB/SublimeGDB.sublime-settings",
		"/home/shisanchuan/C++work/GeneticAlgorithm/GeneticAlgorithmByC++.sublime-project",
		"/home/shisanchuan/C++work/GeneticAlgorithm/CMakeLists.txt",
		"/home/shisanchuan/C++work/GeneticAlgorithmByC++/src/cvplotlib/figure.cc",
		"/home/shisanchuan/C++work/GeneticAlgorithmByC++/includes/figure.h",
		"/home/shisanchuan/C++work/GeneticAlgorithmByC++/includes/window.h",
		"/home/shisanchuan/C++work/GeneticAlgorithmByC++/CMakeLists.txt",
		"/home/shisanchuan/C++work/GeneticAlgorithmByC++/src/cvplotlib/CMakeLists.txt",
		"/home/shisanchuan/C++work/GeneticAlgorithmByC++/src/CMakeLists.txt",
		"/media/shisanchuan/C2B31627EFFD64AE/PY_work/tensorflow_test.py",
		"/home/shisanchuan/文档/test.tex",
		"/home/shisanchuan/C++work/RemortCamerConnect_ARM-PC/camer_pi_TCP.cpp",
		"/home/shisanchuan/.config/sublime-text-3/Packages/User/LaTeXTools.sublime-settings",
		"/home/shisanchuan/C++work/RemortCamerConnect_ARM-PC/test.tex",
		"/home/shisanchuan/.config/sublime-text-3/Packages/SideBarEnhancements/Side Bar.sublime-settings",
		"/home/shisanchuan/.config/sublime-text-3/Packages/Git/Git.sublime-settings",
		"/home/shisanchuan/.config/sublime-text-3/Packages/User/Git.sublime-settings",
		"/home/shisanchuan/.config/sublime-text-3/Packages/User/Side Bar.sublime-settings",
		"/home/shisanchuan/C++work/RemortCamerConnect_ARM-PC/TCP/CMakeLists.txt",
		"/home/shisanchuan/C++work/RemortCamerConnect_ARM-PC/README.md",
		"/home/shisanchuan/C++work/RemortCamerConnect_ARM-PC/TCP/src/CMakeLists.txt",
		"/home/shisanchuan/C++work/RemortCamerConnect_ARM-PC/camer_pc_TCP.cpp",
		"/home/shisanchuan/.config/sublime-text-3/Packages/User/C++.sublime-build"
	],
	"find":
	{
		"height": 47.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"rowRange",
			"opt",
			"fun",
			"objV",
			"objV2",
			"objV",
			"objV2",
			"Trans",
			"trans",
			"draw",
			"show",
			"size",
			"800",
			"3.14",
			"300",
			"sin",
			"j",
			"\"?\"",
			"\"n\"",
			"CV_8UC1",
			"Popula"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/main.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 308,
						"regions":
						{
						},
						"selection":
						[
							[
								292,
								292
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/demo.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4220,
						"regions":
						{
						},
						"selection":
						[
							[
								3921,
								3921
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2394.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "includes/demo.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 110,
						"regions":
						{
						},
						"selection":
						[
							[
								76,
								76
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "includes/GA.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1705,
						"regions":
						{
						},
						"selection":
						[
							[
								1607,
								1607
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 630.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/GAlib/GA_TSP.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1195,
						"regions":
						{
						},
						"selection":
						[
							[
								1052,
								1052
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 252.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		},
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 5,
					"file": "src/GAlib/GA_BP.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1983,
						"regions":
						{
						},
						"selection":
						[
							[
								935,
								935
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "src/GAlib/GA.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4272,
						"regions":
						{
						},
						"selection":
						[
							[
								1097,
								1097
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 315.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 29.0
	},
	"input":
	{
		"height": 39.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 134.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 128.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "GeneticAlgorithmByC++ (Linux)",
	"project": "GeneticAlgorithmByC++.sublime-project",
	"replace":
	{
		"height": 54.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 219.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
